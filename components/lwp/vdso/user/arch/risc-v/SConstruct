import os
import sys
import subprocess
from PIL.SpiderImagePlugin import iforms

arguments = sys.argv[2]
vdso_usr = os.path.dirname(arguments)
user_path = os.path.dirname(vdso_usr)
user_path = os.path.dirname(user_path)
user_path = os.path.dirname(user_path)
rt_root_path = os.path.abspath(os.path.join(vdso_usr, "../../../../../../"))
include_path = os.path.join(rt_root_path, "include")
rtconfig_path = os.path.join(rt_root_path, "bsp", "qemu-virt64-riscv")

EXEC_PATH  = os.getenv('EXEC_PATH')
if not EXEC_PATH:
    EXEC_PATH = os.getenv('RTT_EXEC_PATH') or '/usr/bin'
PREFIX  = os.getenv('CC_PREFIX')
if not PREFIX:
    PREFIX     = os.getenv('RTT_CC_PREFIX') or 'riscv64-unknown-linux-gnu-'
CC      = PREFIX + 'gcc'
CXX     = PREFIX + 'g++'
CPP     = PREFIX + 'cpp'
AS      = PREFIX + 'gcc'
AR      = PREFIX + 'ar'
LINK    = PREFIX + 'gcc'
DEVICE   = ' -march=rv64imafdc -mabi=lp64'
CXXFLAGS = DEVICE + ' -Wall -fdiagnostics-color=always -fPIC -O0 -g'
AFLAGS   = ' -x assembler-with-cpp'
CFLAGS  = DEVICE + ' -Wall -Wno-cpp -std=gnu99 -fdiagnostics-color=always -fPIC -O2'
LFLAGS  = DEVICE + ' -Bsymbolic -Wl,--gc-sections -T {path}/vdso.lds'.format(path=vdso_usr)
CFLAGS += " -I {path} -I {upath} -I {include_path} -I {rtconfig_path} ".format(path=vdso_usr, upath=user_path, include_path=include_path, rtconfig_path=rtconfig_path)

env = Environment(tools=['gcc', 'link'],
    AS   = AS,   ASFLAGS = AFLAGS,
    CC   = CC,   CFLAGS = CFLAGS,
    CXX  = CXX,  CXXFLAGS = CXXFLAGS,
    AR   = AR,   
    LINK = LINK, LINKFLAGS = LFLAGS)
env.PrependENVPath('PATH', EXEC_PATH)

src = os.path.join(vdso_usr,'vdso_sys.c')
target_name = 'librtos_vdso.so'
target = os.path.join(user_path + "/user", "build", target_name)
shared_lib = env.SharedLibrary(target=target, source=src)
env.Default(shared_lib)
