import os
from building import *

cwd = GetCurrentDir()

# add general drivers
src = Split('''
board.c
CubeMX_Config/Src/stm32l4xx_hal_msp.c
''')

path =  [cwd]
path += [os.path.join(cwd, 'CubeMX_Config', 'Inc')]

if not GetDepend(['RT_USING_NANO']):
    if GetDepend(['BSP_USING_KEY']):
        src += [os.path.join('ports', 'drv_key.c')]

    if GetDepend(['BSP_USING_QSPI_FLASH']):
        src += [os.path.join('ports', 'drv_qspi_flash.c')]

    if GetDepend(['BSP_USING_FS']):
        src += [os.path.join('ports', 'drv_filesystem.c')]
        if GetDepend(['BSP_USING_SPI_FLASH_LITTLEFS']):
            src += [os.path.join('ports', 'fal', 'fal_spi_flash_sfud_port.c')]
            path += [os.path.join(cwd, 'ports', 'fal')]

    if GetDepend(['RT_USING_SENSOR']):
        src += [os.path.join('ports', 'drv_sensors.c')]

    if GetDepend(['BSP_USING_AUDIO']):
        src += [os.path.join('ports', 'audio', 'drv_es8388.c')]
        src += [os.path.join('ports', 'audio', 'drv_sound.c')]

    if GetDepend(['BSP_USING_AUDIO_RECORD']):
        src += [os.path.join('ports', 'audio', 'drv_mic.c')]

    if GetDepend(['BSP_USING_STM32_SDIO']):
        src += [os.path.join('ports', 'drv_sdio_adapter.c')]

    if GetDepend(['BSP_USING_AUDIO']):
        path += [os.path.join(cwd, 'ports', 'audio')]

group = DefineGroup('Drivers', src, depend = [''], CPPPATH = path)

Return('group')
